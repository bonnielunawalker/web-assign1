<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <meta name="description" content="Lapis Web Design Enhancements"/>
  <meta name="keywords" content="lapis, web, design, development, enhancements"/>
  <meta name="author" content="Bryn Walker"/>
  <title>Lapis Web Design and Development | Enhancements</title>
  <link rel="stylesheet" type="text/css" href="./styles/style.css"/>
  <link rel="stylesheet" type="text/css" href="./styles/responsive.css"/>
  <link href='https://fonts.googleapis.com/css?family=Bitter' rel='stylesheet' type='text/css'/>
  <script src="https://code.jquery.com/jquery-2.2.3.js"></script>
  <script src="./scripts/cheet.js" type="text/javascript"></script>
  <script src="./scripts/enhancements.js"></script>
</head>
<body>

  <?php include_once("menu.html"); ?>

  <h1>Enhancements</h1>
  <article id="enhancement-responsive-design">
    <h2>Database-stored Job Descriptions</h2>
    <p><a href="./jobs.php">Job descriptions</a> have been stored in an SQL table called <code>descriptions</code>. They are fetched from the table using a simple SQL query - <code>SELECT * FROM descriptions</code>, and then generated by PHP.</p>
    <p>To generate the HTML, the PHP iterates over each index in the <code>$result</code> associative array with a <code>while</code> loop and echos the related columns, generating dynamic HTML for each section of the job description. Required skills and responsibilities are seperated by commas when they are entered into the table, and by using <code>explode()</code> are joined into an array that can then be iterated over using a <code>foreach</code> loop.</p>
    <p>This enhancement allows the website to be more easily extensible, as job descriptions and details need only to be added to the database to be generated.</p>
  </article>

  <article id="enhancement-interactivity">
    <h2>Sort Options for management.php</h2>
    <p>The results of queries on <a href="./manage.php">management.php</a> can now be sorted by a variety of options.</p>
    <p>To add this feature, the values of select options are the names of various columns in the SQL table, submitted as strings. The selected value is stored in a variable, and passed to the <code>ORDER BY</code> section of the SQL query. Using this method, no additional server-side checking is needed.</p>
    <p>By default, the table is sorted by EOInumber, and this default is assigned if no other sort type has been entered. This avoids issues with null values being mistakenly entered when the default "Select an option..." <code>&lt;option&gt;</code> is submitted.</p>
  </article>

  <?php include_once("footer.html"); ?>

</body>
</html>
